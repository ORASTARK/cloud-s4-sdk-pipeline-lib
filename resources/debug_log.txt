# SAP Cloud SDK `<% print shareConfidentialInformation ? "Confidential" : "Redacted" %>` Debug Log

The debug log is generated with each build and should be included in every support request, don't worry in case you don't understand all of the contents.

The log was generated at: `$utcTimestamp UTC`

#### Please be sure that this file doesn't contain any information that you are not allowed to share.

## 1. Pipeline Environment

The pipeline is running in a `${environment.get("environment")}` environment.

<% print environment.get("build_details") ? "Environment Variable | Value" : "" %>
<% print environment.get("build_details") ? "---------------------|------" : "" %>
<% print environment.get("build_details").collect({each -> "${each}"}).join("\n") %>

<% print environment.get("docker_image") ? "It is using this docker image: `${environment.get("docker_image")}`" : "" %>

## 2. Plugins

<% print plugins ? "" : "No plugins were used for this build." %>

<% print plugins ? "Shortname | Version | Displayname" : "" %>
<% print plugins ? "----------|---------|------------" : "" %>
<% print plugins.collect({each -> "${each}"}).join("\n") %>

<% print shareConfidentialInformation ? "## 3. GitHub Repository" : "" %>

<% print shareConfidentialInformation ? github ? "" : "GitHub isn't used for version control" : "" %>

<% print github && shareConfidentialInformation ? "Repository | Branch" : "" %>
<% print github && shareConfidentialInformation ? "-----------|-------" : "" %>
<% print github && shareConfidentialInformation ? "${github.get("URI")} | ${github.get("branch")}" : "" %>

<% print shareConfidentialInformation ? "## 4. Local Extensions" : "## 3. Local Extensions" %>

<% print localExtensions ? "" : "No local extensions were used" %>

<% print localExtensions ? "Local Extension | relationToOriginalStage" : "" %>
<% print localExtensions ? "----------------|-------" : "" %>
<% print localExtensions.collect({each -> "${each.key} | ${each.value}"}).join("\n") %>

<% print shareConfidentialInformation ? "## 5. Global Extension Repository" : "## 4. Global Extension Repository" %>

<% print shareConfidentialInformation ? globalExtensionRepository ? "The following global extension repository was loaded for this build: \n\n${globalExtensionRepository}\n" : "No global extension repository was loaded." : "" %>
<% print globalExtensions ? "The repository included the following extensions:" : "No extension of the global extension repository was used" %>

<% print globalExtensions ? "Global Extension | relationToOriginalStage" : "" %>
<% print globalExtensions ? "-----------------|-------" : "" %>
<% print globalExtensions.collect({each -> "${each.key} | ${each.value}"}).join("\n") %>

<% print shareConfidentialInformation ? "## 6. Shared Libraries" : "" %>

<% print shareConfidentialInformation ? additionalSharedLibraries ? "" : "No additional shared libraries were loaded." : "" %>

<% print additionalSharedLibraries && shareConfidentialInformation ? "name | branch | loadedByExtension" : "" %>
<% print additionalSharedLibraries && shareConfidentialInformation ? "-----|--------|-------" : "" %>
<% print shareConfidentialInformation ? additionalSharedLibraries.collect({each -> "${each}"}).join("\n") : "" %>

<% print shareConfidentialInformation && failedBuild ? "## 7. Unsuccessful Build" : !shareConfidentialInformation && failedBuild ?  "## 5. Unsuccessful Build" : "" %>

<% print failedBuild.get("stage") ? "The build failed in the `${failedBuild.get("stage")}` stage." : "" %>

<% print failedBuild.get("reason") ? "The following error message was generated:" : "" %>
<% print failedBuild.get("reason") ? "```\n${failedBuild.get("reason")}\n```" : "" %>
<% print failedBuild.get("stack_trace") ? "The following stack trace was generated:" : "" %>
<% print failedBuild.get("stack_trace") ? "```" : "" %>
<% print failedBuild.get("stack_trace").collect({each -> "${each}"}).join("\n") %>
<% print failedBuild.get("stack_trace") ? "```" : "" %>
