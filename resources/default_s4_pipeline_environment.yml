#Project Setup
general:
  unsafeMode: false
  productiveBranch: master
  collectTelemetryData: true
  defaultNode: ''
  automaticVersioning: true


#Steps Specific Configuration
steps:
  artifactSetVersion:
    gitCredentialsId: ''
    commitVersion: false
    buildTool: 'maven'
    timestampTemplate: '%Y-%m-%dT%H%M%S%Z'

  mavenExecute:
    dockerImage: maven:3.5-jdk-8-alpine
    dockerOptions: ''

  executeNpm:
    dockerImage: s4sdk/docker-node-browsers

  executeGradle:
    dockerImage: gradle:5.0-jdk8

  executeSourceClearScan:
    dockerImage: s4sdk/docker-maven-npm

  checkFindbugs:
    includeFilterFile: s4hana_findbugs_include_filter.xml
    scanModules:
      - 'application'

  executeFortifyScan:
    verbose: false
    sourceVersion: 1.8
    use64BitVersion: true
    maximumMemoryUsage: 3000M
    exclude: '**/resources/**/*,**/target/**/*,**/unit-tests/**/*,**/integration-tests/**/*'
    skipNgComponents: true

  checkPmd:
    scanModules:
      - 'application'

  checkJMeter:
    dockerImage: famiko/jmeter-base
    testPlan: ./performance-tests/*
    reportDirectory: /jmeter-report
    failThreshold: 100
    unstableThreshold: 90

  cloudFoundryDeploy:
    dockerImage: s4sdk/docker-cf-cli
    keepOldInstance: true
    stashContent: []

  neoDeploy:
    deployMode: 'warParams'
    neoHome: '/sdk'

  mtaBuild:
    buildTarget: 'CF'

#Stage Specific Configurations
stages:
  integrationTests:
    retry: 1
    forkCount: 1C

  endToEndTests:
    enableZeroDowntimeDeployment: false
    onlyRunInProductiveBranch: false

  checkmarxScan:
    filterPattern: '!**/*.log, !**/*.lock, !**/*.json, !**/*.html, !**/Cx*, **/*.js, **/*.java, **/*.ts'
    fullScansScheduled: true
    generatePdfReport: true
    incremental: true
    preset: '36'
    vulnerabilityThresholdLow: 99999
    vulnerabilityThresholdMedium: 0

  artifactDeployment:
    nexus:
      version: nexus3
